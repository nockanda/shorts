//송신기

//라이브러리
#include <ACAN_ESP32.h>

#define myanalog 4

unsigned long t = 0;

void setup() {
  Serial.begin(115200); //나 컴퓨터와 USB로 통신할거야!
  //캔통신의 통신속도를 결정하는 부분
  //125k(125000UL), 250k(250000UL), 500k(500000UL)
  ACAN_ESP32_Settings settings(125000UL); //125k

  //실제로 통신할거기 때문에 루프백모드를 설정하면 안된다
  //settings.mRequestedCANMode = ACAN_ESP32_Settings::LoopBackMode;
  
  //Default Tx:GPIO4, Rx:GPIO5
  settings.mRxPin = GPIO_NUM_17; //TX2
  settings.mTxPin = GPIO_NUM_16; //RX2

  //통신속도와 연결핀을 기준으로 캔통신 초기화
  const uint32_t ret = ACAN_ESP32::can.begin(settings) ;

  //ESP32에 설정된 캔통신 파라미터가 ~~~게 되었다라는것을 단순 프린트해준다!
  if (ret == 0) {    
    Serial.print("Bit Rate prescaler: ") ;
    Serial.println(settings.mBitRatePrescaler) ;
    Serial.print("Time Segment 1:     ") ;
    Serial.println(settings.mTimeSegment1) ;
    Serial.print("Time Segment 2:     ") ;
    Serial.println(settings.mTimeSegment2) ;
    Serial.print("RJW:                ") ;
    Serial.println(settings.mRJW) ;
    Serial.print("Triple Sampling:    ") ;
    Serial.println(settings.mTripleSampling ? "yes" : "no") ;
    Serial.print("Actual bit rate:    ") ;
    Serial.print(settings.actualBitRate ()) ;
    Serial.println(" bit/s") ;
    Serial.print("Exact bit rate ?    ") ;
    Serial.println(settings.exactBitRate () ? "yes" : "no") ;
    Serial.print("Distance            ") ;
    Serial.print(settings.ppmFromDesiredBitRate ()) ;
    Serial.println(" ppm") ;
    Serial.print("Sample point:       ") ;
    Serial.print(settings.samplePointFromBitStart ()) ;
    Serial.println("%") ;
    Serial.println("Configuration OK!");
  } else {
    Serial.print("Configuration error 0x") ;
    Serial.println(ret, HEX) ;    
  }
}

void loop() {
  if(millis() - t > 100){
    t = millis();
    CANMessage frame;
    frame.id = 0x123;
    frame.ext = 0; //기본주소
    frame.rtr = 0; //확실히 이게 무슨 기능을 하는지는 모르겠음!
    frame.len = 8; //내가 보낼 데이터의 길이

    int mydata = analogRead(myanalog); //0~4095

    //아날로그값을 byte로 쪼개서 전송해야한다!
    frame.data[0] = mydata/256;//몫
    frame.data[1] = mydata%256;//나머지
    frame.data[2] = 0x00;
    frame.data[3] = 0x00;
    frame.data[4] = 0x00;
    frame.data[5] = 0x00;
    frame.data[6] = 0x00;
    frame.data[7] = 0x00;

    //전송
    if (ACAN_ESP32::can.tryToSend(frame)) {
      //성공 
      Serial.println("전송에 성공했습니다");
    }   
  }
  
  
}











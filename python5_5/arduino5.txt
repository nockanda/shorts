//JSON데이터를 역직렬화하기위해서 필요함!
#include <ArduinoJson.h>

//녹칸다의 릴레이가 2번핀에 연결됨!
#define relay 2

void setup() {
  //파이썬과 통신속도가 9600이다!(보-레이트가 9600이다)
  Serial.begin(9600);
  //릴레이가 연결된 핀이 출력이다!
  pinMode(relay,OUTPUT);
  //아두이노가 재부팅되면 모든 디지털핀은 LOW상태로 초기화된다!
  //로우레벨트리거는 low신호에 릴레이가 ON되기때문에
  //아두이노를 켜자마자 릴레이가 초기상태로 켜짐이 된다!
  //릴레이의 초기상태를 OFF로 하기 위해서 HIGH신호를 준다
  digitalWrite(relay,HIGH);
}

void loop() {
  //파이썬에서 JSON데이터가 수신되면 종료문자인 \n이 있을때까지 읽는다!
  if(Serial.available() > 0){
    //아두이노의 수신버퍼에 데이터가 존재할경우 \n까지읽어서 myjson에 반환한다!
    String myjson = Serial.readStringUntil('\n');
    //myjson : 파이썬이 보낸 JSON데이터임!(역직렬화해볼까?)

    //일단 비어있는 object를 적정한 사이트에 맞게 만들어줌!
    StaticJsonDocument<96> doc;


    //파이썬에서 수신한 json을 역직렬화해서 doc에 대입해줌!
    DeserializationError error = deserializeJson(doc, myjson);

    //파이썬쪽에서 json규칙에 위배되는 데이터를 전송하는 경우 에러임!
    if (error) {
      Serial.print(F("deserializeJson() failed: "));
      Serial.println(error.f_str());
      return;
    }
    //파이썬에서 relay라는 key에 0을 보내주면 OFF, 1을보내주면 ON
    int myrelay = doc["relay"];
    if(myrelay == 0){
      //OFF
      digitalWrite(relay,HIGH);
    }else if(myrelay == 1){
      //ON
      digitalWrite(relay,LOW);
    }
  }

}



#include <WiFi.h>
#include "SPI.h"
#include "Adafruit_GFX.h"
#include "Adafruit_ILI9341.h"
#include <SPI.h>
#include <SD.h>

#ifndef STASSID
#define STASSID "nockanda" //와이파이 검색했을때 뜨는 이름
#define STAPSK  "11213144" //패스워드
#endif
#define TFT_DC 2
#define TFT_CS 5
#define SD_CS 4

#define FONT16 32
#define FONT24 72
#define FONT36 128
#define FONT40 200
Adafruit_ILI9341 tft = Adafruit_ILI9341(TFT_CS, TFT_DC);
File myFile;

const char* ssid = STASSID;
const char* password = STAPSK;

//http://www.kma.go.kr/wid/queryDFSRSS.jsp?zone=1159068000
const char* host = "www.kma.go.kr";
const int httpsPort = 80;

void setup() {
  Serial.begin(115200);
  tft.begin();
  tft.setRotation(3);
  tft.fillScreen(ILI9341_BLACK);
  tft.setCursor(0, 0);
  tft.setTextColor(ILI9341_WHITE);
  tft.setTextSize(4);

  if (!SD.begin(SD_CS)) {
    Serial.println(F("initialization failed!"));
    while (1);
  }
  Serial.println(F("initialization done."));
  
  
  Serial.println();
  Serial.print("connecting to ");
  Serial.println(ssid);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());

  //날씨정보를 1회 가져올것!
  getweather();

}

void loop() {
}

void getweather(){
  // Use WiFiClientSecure class to create TLS connection
  tft.fillScreen(ILI9341_BLACK);
  tft.setCursor(0, 0);
  
  WiFiClient client;
  Serial.print("connecting to ");
  Serial.println(host);
  //클라이언트와 서버와 커넥트
  if (!client.connect(host, httpsPort)) {
    Serial.println("connection failed");
    return;
  }

  String url = "/wid/queryDFSRSS.jsp?zone=1159068000";
  Serial.print("requesting URL: ");
  Serial.println(url);

  //사물인터넷보드에서 RSS서버로 보내는 요청!
  client.print(String("GET ") + url + " HTTP/1.1\r\n" +
               "Host: " + host + "\r\n" +
               "Connection: close\r\n\r\n");

  //서버로부터 응답이 있을때까지 대기하겠다..
  //언제까지 기다려야하나요..?
  //timeout!
  unsigned long t = millis(); //생존시간
  while(1){
    if(client.available()) break;
    if(millis() - t > 10000) break;
  }

/*
 * 
시간 <hour>
기온 <temp>
날씨 <wfEn>
강수확률 <pop>
풍속 <ws>
풍향 <wdEn>
습도 <reh>
 */

  //응답이 날라오는 부분!
  Serial.println("request sent");

  int count = 1;
  int x_pos = 0;
  int y_pos = 0;
  tft.drawRect(0, 0, 319, 40, ILI9341_WHITE);
  tft.drawRect(0, 40, 80, 199, ILI9341_WHITE);
  tft.drawRect(80, 40, 80, 199, ILI9341_WHITE);
  tft.drawRect(160, 40, 80, 199, ILI9341_WHITE);
  tft.drawRect(240, 40, 79, 199, ILI9341_WHITE);
  
  hangul2utf8(0,0,"녹칸다의 한글 일기예보 시스템!",ILI9341_WHITE,16);
  while(client.available()){
    String data = client.readStringUntil('\n'); //readline();
    if(count > (8+22)) return;
    String temp = "<category>";
    int s = data.indexOf(temp) + temp.length();
    int e = data.indexOf("</category>");
    if(s != -1 && e != -1){
      String output = data.substring(s,e);
      Serial.println("지역=" + output);
      Serial.println(count);
      //tft.println("HOUR=" + output);
      y_pos+=16;
      hangul2utf8(0,y_pos,"지역=" + output,ILI9341_WHITE,16);
      count++;
    }
    //<pubDate>

    temp = "<tm>";
    s = data.indexOf(temp) + temp.length();
    e = data.indexOf("</tm>");
    if(s != -1 && e != -1){
      String output = data.substring(s,e);
      Serial.println("날짜=" + output);
      Serial.println(count);
      //tft.println("HOUR=" + output);
      y_pos += 24;
      //hangul2utf8(0,y_pos,"날짜="+output,ILI9341_WHITE,16);
      count++;
    }
    
    temp = "<hour>";
    s = data.indexOf(temp) + temp.length();
    e = data.indexOf("</hour>");
    if(s != -1 && e != -1){
      //4 11 18 25
      if(count == 10 || count == 17 || count == 24){
        Serial.println("---------------------------");
        x_pos+=80; //320을 4등분했다!
        y_pos=40;
        Serial.print("x_pos=");
        Serial.println(x_pos);
      }
      
      String output = data.substring(s,e);
      Serial.println("시간=" + output);
      Serial.println(count);
      //tft.println("HOUR=" + output);
      y_pos += 24;
      hangul2utf8(x_pos,y_pos,output,ILI9341_WHITE,16);
      count++;
      
      
    }

    
    temp = "<temp>";
    s = data.indexOf(temp) + temp.length();
    e = data.indexOf("</temp>");
    if(s != -1 && e != -1){
      String output = data.substring(s,e);
      Serial.println("온도=" + output);
      Serial.println(count);
      //tft.println("TEMP=" + output);
      y_pos += 24;
      hangul2utf8(x_pos,y_pos,output,ILI9341_WHITE,16);
      count++;
    }

    temp = "<wfKor>";
    s = data.indexOf(temp) + temp.length();
    e = data.indexOf("</wfKor>");
    if(s != -1 && e != -1){
      String output = data.substring(s,e);
      Serial.println("날씨=" + output);
      Serial.println(count);
      //tft.println("WFEN=" + output);
      y_pos += 24;
      hangul2utf8(x_pos,y_pos,output,ILI9341_WHITE,16);
      count++;
    }

    temp = "<pop>";
    s = data.indexOf(temp) + temp.length();
    e = data.indexOf("</pop>");
    if(s != -1 && e != -1){
      String output = data.substring(s,e);
      Serial.println("강수확률=" + output);
      Serial.println(count);
      //tft.println("POP=" + output);
      y_pos += 24;
      hangul2utf8(x_pos,y_pos,output,ILI9341_WHITE,16);
      count++;
    }

    temp = "<ws>";
    s = data.indexOf(temp) + temp.length();
    e = data.indexOf("</ws>");
    if(s != -1 && e != -1){
      String output = data.substring(s,e);

      //output을 최대 길이를 6으로 제한하겠다!
      if(output.length() > 6){
        output = output.substring(0,6);
      }
      
      Serial.println("풍속=" + output);
      Serial.println(count);
      //tft.println("WS=" + output);
      y_pos += 24;
      hangul2utf8(x_pos,y_pos,output,ILI9341_WHITE,16);
      count++;
    }

    temp = "<wdKor>";
    s = data.indexOf(temp) + temp.length();
    e = data.indexOf("</wdKor>");
    if(s != -1 && e != -1){
      String output = data.substring(s,e);
      Serial.println("풍향=" + output);
      Serial.println(count);
      //tft.println("WDEN=" + output);
     y_pos += 24;
      hangul2utf8(x_pos,y_pos,output,ILI9341_WHITE,16);
      count++;
    }
    temp = "<reh>";
    s = data.indexOf(temp) + temp.length();
    e = data.indexOf("</reh>");
    if(s != -1 && e != -1){
      String output = data.substring(s,e);
      Serial.println("습도=" + output);
      Serial.println(count);
      //tft.println("REH=" + output);
      y_pos += 24;
      hangul2utf8(x_pos,y_pos,output,ILI9341_WHITE,16);
      count++;
    }

    
  }
  Serial.println("DONE");
}
void draw_hangul(int x,int y, String utf8code,uint16_t color,int font_size){
  
  int font_array_count = 0;
  String direct;

  if(font_size == 16) {font_array_count=2;direct=F("nock16/");}
  else if(font_size == 24) {font_array_count=3;direct=F("nock24/");}
  else if(font_size == 32) {font_array_count=4;direct=F("nock32/");}
  else if(font_size == 40) {font_array_count=5;direct=F("nock40/");}

  //파일불러오기
  myFile = SD.open("/"+direct+utf8code+F(".txt"));
  String output;
  if (myFile) {
    while (myFile.available()) {
      output += String((char)myFile.read());
    }
    //Serial.println(output);
    myFile.close();
  } else {
    Serial.println("NO FILE");
    return;
  }

  int count = 1;
  //4개가 1line
  for(int i =0;i<output.length();i+=2){
    //Serial.println();
    //Serial.println(i);
    byte value = shex2hex(output[i], output[i+1]);

    for(int j =0;j<8;j++){
        byte temp = (128>>j);
        if((value & temp) == temp){
          //해당 bit가 1인것!
              tft.drawPixel(x,y,color);
              //Serial.print("1");
          }else{
              //Serial.print("0");
          }
          x++;
    }

   if(count % font_array_count ==0){
    //한라인구분
    //Serial.println();
    if(i == output.length()-2){
      y++;
      y-=font_size;
      
    }else{
      y++;
      x-=font_size;
    }
    //Serial.print("(");
    //Serial.print(i);
    //Serial.print(",");
    //Serial.print(x);
    //Serial.print(",");
    //Serial.print(y);
    //Serial.println(")");
   }
    count++;
  }//for
  tft.setCursor(x, y);
}

void draw_hangul2(int x,int y, byte hexcode[],uint16_t color,int font_size){
  int font_array_count;
  int loop_size = font_size*font_size/8;
  if(font_size == 16) {font_array_count=2;}
  else if(font_size == 24) {font_array_count=3;}
  else if(font_size == 32) {font_array_count=4;}
  else if(font_size == 40) {font_array_count=5;}
  int count = 1;
  //4개가 1line
  for(int i =0;i<loop_size;i++){
    //Serial.println();
    //Serial.println(i);
    byte value = hexcode[i];

    for(int j =0;j<8;j++){
        byte temp = (128>>j);
        if((value & temp) == temp){
          //해당 bit가 1인것!
              tft.drawPixel(x,y,color);
              //Serial.print("1");
          }else{
              //Serial.print("0");
          }
          x++;
    }

   if(count % font_array_count ==0){
    //한라인구분
    //Serial.println();
    if(i == loop_size-2){
      y++;
      y-=font_size;
      
    }else{
      y++;
      x-=font_size;
    }
    //Serial.print("(");
    //Serial.print(i);
    //Serial.print(",");
    //Serial.print(x);
    //Serial.print(",");
    //Serial.print(y);
    //Serial.println(")");
   }
    count++;
  }//for
}

byte shex2hex(char data1, char data2){
//3F
//숫자는 -'0' 하면 숫자로된다
//a~f 는 -'a'+10 하면 숫자로된다
  byte output;

  int a,b;
  if(data1 >= '0' && data1 <= '9'){
   a = data1-'0';
  }else if(data1 >= 'a' && data1 <= 'f'){
   a = data1-'a'+10;
  }else if(data1 >= 'A' && data1 <= 'F'){
   a = data1-'A'+10; 
  }
  if(data2 >= '0' && data2 <= '9'){
   b = data2-'0';
  }else if(data2 >= 'a' && data2 <= 'f'){
   b = data2-'a'+10;
  }else if(data2 >= 'A' && data2 <= 'F'){
   b = data2-'A'+10; 
  }

  return a*16+b;

}

void hangul2utf8(int x,int y, String text,uint16_t color,int fontsize){
  tft.setTextColor(color); 
  if(fontsize == 16) tft.setTextSize(2);
  if(fontsize == 24) tft.setTextSize(3);
  
  tft.setCursor(x, y);
  for(int i = 0;i<text.length();){
    if(text[i] >128){
      //한글
      //Serial.println("한글");
      String output = String(text[i]&0xFF,HEX);
      output += String(text[i+1]&0xFF,HEX);
      output += String(text[i+2]&0xFF,HEX);
      i+=3;
      //Serial.println(output);
      //이전 커서값을 가져와야한다..
      
      draw_hangul(tft.getCursorX(),tft.getCursorY(),output,color,fontsize);

    }else{
      //ascii
      //Serial.println("아스키");
      //Serial.println(text[i]);
       tft.print(text[i]);
      i++;
    }

  }
}

void set_hangul(String hangul,int font_size,byte data[]){
  String output;
  if(hangul[0] >128){
    //한글
    //Serial.println("한글");
    output = String(hangul[0]&0xFF,HEX);
    output += String(hangul[1]&0xFF,HEX);
    output += String(hangul[2]&0xFF,HEX);
  }else{
    //한글이 아닙니다~!
    return;
  }
  String direct;
  if(font_size == 16) {direct=F("nock16/");}
  else if(font_size == 24) {direct=F("nock24/");}
  else if(font_size == 32) {direct=F("nock32/");}
  else if(font_size == 40) {direct=F("nock40/");}
  //Serial.println(hangul);
  //Serial.println(direct+output+".txt");
  myFile = SD.open("/"+direct+output+F(".txt"));

  int count = 0;
  char temp[2];
  if (myFile) {
    while (myFile.available()) {
      //data += String((char)myFile.read());
      myFile.readBytes(temp,2);
      data[count] = shex2hex(temp[0],temp[1]);
      count++;
    }
    //Serial.println(output);
    myFile.close();
  } else {
    Serial.println("NO FILE");
    return;
  }

}